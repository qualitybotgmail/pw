{"changed":true,"filter":false,"title":"ThreadsController.php","tooltip":"/app/Controller/ThreadsController.php","value":"<?php\nApp::uses('AppController', 'Controller');\n/**\n * Threads Controller\n *\n * @property Thread $Thread\n * @property PaginatorComponent $Paginator\n */\nclass ThreadsController extends AppController {\n\n/**\n * Components\n *\n * @var array\n */\n\tpublic $components = array('Paginator');\n\n/**\n * index method\n *\n * @return void\n */\n\tpublic function index() {\n\t\t\n\t\t$this->Thread->recursive = 2;\n\t\t// $id = $this->Auth->user('id');\n\t\t// $options = array('conditions' => array('user_id'=>$id));\n\t\t//$this->Paginator->settings = ['limit' =>3000];//high limit for now\n\t\t\n\t\t$threads = $this->Thread->find('all',['order' => ['Thread.created DESC']]);//$this->Paginator->paginate();\n\t//\techo ($threads['Owner']['password']);exit;\n\t\t\n\t\tforeach($threads as $k => $thread){\n\t\t\t\n\t\t\t$tid = $thread['Thread']['id'];\n\t\t\t$uid = $this->Auth->user('id');\n\t\t\t$threads[$k]['Thread']['isUserLiked'] = $this->Thread->isLiked($tid,$uid);\n\t\t\t$threads[$k]['Thread']['likes'] = count($thread['Like']);\n\t\t\tunset($threads[$k]['Owner']['password']);\n\t\t\tunset($threads[$k]['Like']);\n\t\t\t\n\t\t\tforeach($thread['Comment'] as $kk => $comment){\n\t\t\t\t$threads[$k]['Comment'][$kk]['likes'] = count($comment['Like']);\n\t\t\t\t$threads[$k]['Comment'][$kk]['isUserLiked'] = $this->Thread->Comment->isLiked($comment['id'],$uid);\n\t\t\t\tunset($threads[$k]['Comment'][$kk]['Like']);\n\t\t\t\tunset($threads[$k]['Comment'][$kk]['Thread']);\n\t\t\t\t\n\t\t\t}\n\t\t\t//total likes of comments\n\t\t}\n\t\t\n\t\t$this->set('threads', $threads);\n\t\t \n\n\t}\n\tpublic function beforeFilter(){\n//\t\t$this->Auth->allow('comment');\n\t}\n\n/**\n * view method\n *\n * @throws NotFoundException\n * @param string $id\n * @return void\n */\n\tpublic function view($id = null) {\n\t\n\t\tif (!$this->Thread->exists($id)) {\n\t\t\tthrow new NotFoundException(__('Invalid thread'));\n\t\t}\n\t\t$this->Thread->recursive = 3;\n\t\t$thread = $this->Thread->findById($id);\n\t\t$tid = $id;\n\t\t$uid = $this->Auth->user('id');\n\t\t\n\t\t$thread['Thread']['isUserLiked'] = $this->Thread->isLiked($tid,$uid);\n\t\t$thread['Thread']['likes'] = count($thread['Like']);\n\t\tunset($thread['Owner']['password']);\n\t\tunset($thread['Like']);\n\t\t\t\n\t\tforeach($thread['Comment'] as $kk => $comment){\n\t\t\t$thread['Comment'][$kk]['likes'] = count($comment['Like']);\n\t\t\t$thread['Comment'][$kk]['isUserLiked'] = $this->Thread->Comment->isLiked($comment['id'],$uid);\n\t\t\tunset($thread['Comment'][$kk]['Like']);\n\t\t\tunset($thread['Comment'][$kk]['Thread']);\n\t\t\t\n\t\t} \n\t\t$this->loadModel('Upload');\n\t\t\n\t\t$cond = array('conditions' => array('Upload.thread_id' => $id));\n\t\t$uploads = $this->Upload->find('all', $cond);\n\t\t\t//total likes of comments\n\t\t\n\t\t\t\t\n\t\t\n\t\t$this->set('thread',$thread);\n\t}\n\n/**\n * add method\n *\n * @return void\n */\n\tpublic function add() {\n\n\t\tif ($this->request->is('post')) {\n\t\t\t\n\t\t\t$this->Thread->create();\n\t\t\t$this->request->data['Thread']['user_id'] = $this->Auth->user('id');\n\t\t\t$this->request->data['Thread']['head'] = $this->request->data['head'];\n\t\t\t$this->request->data['Thread']['title'] = $this->request->data['title'];\n\t\t\t\n\t\t\t$data = $this->Thread->save($this->request->data);\n\t\t\tif ($data) {\n\t\t\t\t\n\t\t\t\tif(true){//$this->request->is('ajax')){\n\t\t\t\t\t$id = $data['Thread']['id'];\n\t\t\t\t\theader('Content-Type: application/json;charset=utf-8');\n\t\t\t\t\techo json_encode($data);\n\t\t\t\t\texit;\n\t\t\t\t}\n\t\t\t\t$this->Session->setFlash(__('The thread has been saved.'), 'default', array('class' => 'alert alert-success'));\n\t\t\t\treturn $this->redirect(array('action' => 'index'));\n\t\t\t} else {\n\t\t\t\t$this->Session->setFlash(__('The thread could not be saved. Please, try again.'), 'default', array('class' => 'alert alert-danger'));\n\t\t\t}\n\t\t}\n\t\t$users = $this->Thread->User->find('list');\n\t\t$this->set(compact('users'));\n\t}\n/**\n * add method\n *\n * @return void\n */\n\tpublic function addmember($thread_id = null,$member_id = null) {\n\t\theader('Content-Type: application/json;charset=utf-8');\n\t\t$ids = explode(\",\",$member_id);\n\t\ttry{\n\t\t\t$thread = $this->Thread->findById($thread_id);\n\t\t\t$users = [];\n\t\t\t\t\t\t\n\t\t\tforeach($thread['User'] as $i => $u){\n\t\t\t\tif(is_numeric($i)){\n\t\t\t\t\t$users[] = $u['id'];\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t$oldcount = count($users);\n\t\t\t$users = array_merge($ids,$users);\n\t\t\t$users = array_unique($users);\n\t\t\t\n\t\t\t\n\t\t\tif(count($users)!=$oldcount){\n\t\t\t\t\n\t\t\t\t$result = $this->Thread->save(array(\n\t\t\t\t\t'Thread' => array('id' => $thread_id),\n\t\t\t\t\t'User' => array('User' => $users)\n\t\t\t\t));\n\t\t\t\t\n\t\t\t\techo json_encode(['status' => 'OK']);\n\t\t\t\texit;\n\t\t\t}\n\t\t\techo json_encode(['status' => 'EXISTS']);\n\t\t\t\n\t\t\texit;\n\t\t}catch(Exception $e){\n\t\t\techo json_encode(['status' => 'FAILED']);\n\t\t\texit;\n\t\t}\n\t}\n/**\n * add method\n *\n * @return void\n */\n\tpublic function like($id = null) {\n\t\t$this->Thread->id = $id;\n\t\tif (!$this->Thread->exists()) {\n\t\t\tthrow new NotFoundException(__('Invalid thread'));\n\t\t}\n\t\t$user_id = $this->Auth->user('id');\t\t\n\t\t$like = array(\n\t\t\t'Like' => array('user_id' => $user_id,'thread_id' => $id)\n\t\t);\n\t\t\n\t\tif(!$this->Thread->Like->threadLikeExists($id,$user_id)){\n\t\t\t$ret = $this->Thread->Like->save($like);\n\t\t\tif($ret)\n\t\t\t\techo json_encode(['status' => 'OK']); \n\t\t\telse {\n\t\t\t\techo json_encode(['status' => 'FAILED']);\n\t\t\t}\n\t\t\texit;\n\t\t}\n\t\techo json_encode(['status' => 'EXISTS']);\n\t\texit;\n\t\t\n\t\t\n\t\t\n// Array\n// (\n//     [Like] => Array\n//         (\n//             [user_id] => 3\n//             [message_id] => 1\n//             [thread_id] => 1\n//         )\n\n// )\n\n\t\treturn $this->redirect(array('action' => 'index'));\n\t}\n/**\n * add method\n *\n * @return void\n */\n\tpublic function unlike($id = null) {\n\t\t$this->Thread->id = $id;\n\t\tif (!$this->Thread->exists()) {\n\t\t\tthrow new NotFoundException(__('Invalid thread'));\n\t\t}\n\t\t$user_id = $this->Auth->user('id');\t\t\n\t\t\n\t\tif($this->Thread->Like->threadLikeExists($id,$user_id)){\n\t\t\t$ret = $this->Thread->Like->threadLike($id,$user_id);\n\t\t\t$this->Thread->Like->id  = $ret['Like']['id'];\n\t\t\tif($this->Thread->Like->delete()){\n\t\t\t\techo json_encode(['status' => 'OK']);\n\t\t\t} else {\n\t\t\t\techo json_encode(['status' => 'FAILED']);\n\t\t\t}\n\t\t\texit;\n\t\t}else{\n\t\t\techo json_encode(['status' => 'NOT_EXISTING']);\n\t\t}\n\t\texit;\n\t\t\n\t\t\n\t\t\n// Array\n// (\n//     [Like] => Array\n//         (\n//             [user_id] => 3\n//             [message_id] => 1\n//             [thread_id] => 1\n//         )\n\n// )\n\n\t\treturn $this->redirect(array('action' => 'index'));\n\t}\t\n\t\t\n/**\n * edit method\n *\n * @throws NotFoundException\n * @param string $id\n * @return void\n */\n\tpublic function edit($id = null) {\n\t\tif (!$this->Thread->exists($id)) {\n\t\t\tthrow new NotFoundException(__('Invalid thread'));\n\t\t}\n\t\tif ($this->request->is(array('post', 'put'))) {\n\t\t\tif ($this->Thread->save($this->request->data)) {\n\t\t\t\t$this->Session->setFlash(__('The thread has been saved.'), 'default', array('class' => 'alert alert-success'));\n\t\t\t\treturn $this->redirect(array('action' => 'index'));\n\t\t\t} else {\n\t\t\t\t$this->Session->setFlash(__('The thread could not be saved. Please, try again.'), 'default', array('class' => 'alert alert-danger'));\n\t\t\t}\n\t\t} else {\n\t\t\t$options = array('conditions' => array('Thread.' . $this->Thread->primaryKey => $id));\n\t\t\t$this->request->data = $this->Thread->find('first', $options);\n\t\t}\n\t\t$users = $this->Thread->User->find('list');\n\t\t$this->set(compact('users'));\n\t}\n\n\tpublic function comment($id = null) {\n\t\theader('Content-Type: application/json;charset=utf-8');\n\t\tif (!$this->Thread->exists($id)) {\n\t\t\t$this->notExisting();\n\t\t}\n\t\t$user_id = $this->Auth->user('id');\n\t\tif(isset($this->request->data['body'])){\n\t\t\t$this->request->data['Comment']['body'] = $this->request->data['body'];\n\t\t}\n\t\tif ($this->request->is(array('post', 'put'))) {\n\t\t\t$this->request->data['Comment']['thread_id'] = $id;\n\t\t\t$this->request->data['Comment']['user_id']   = $user_id;\n\t\t\t$data = $this->Thread->Comment->save($this->request->data);\n\t\t\tif ($data) {\n\t\t\t\techo json_encode($data);\n\t\t\t\texit;\n\t\t\t} else {\n\t\t\t\t$this->failed();\n\t\t\t}\n\t\t}\n\t\t$this->status(\"INVALID_REQUEST\");\n\t}\n\n/**\n * delete method\n *\n * @throws NotFoundException\n * @param string $id\n * @return void\n */\n\tpublic function delete($id = null) {\n\t\t$this->Thread->id = $id;\n\t\tif (!$this->Thread->exists()) {\n\t\t\tthrow new NotFoundException(__('Invalid thread'));\n\t\t}\n\t\t$this->request->onlyAllow('post', 'delete');\n\t\tif ($this->Thread->delete()) {\n\t\t\t$this->Session->setFlash(__('The thread has been deleted.'), 'default', array('class' => 'alert alert-success'));\n\t\t} else {\n\t\t\t$this->Session->setFlash(__('The thread could not be deleted. Please, try again.'), 'default', array('class' => 'alert alert-danger'));\n\t\t}\n\t\treturn $this->redirect(array('action' => 'index'));\n\t}\n\t\n\tpublic function userstoadd($thread_id){\n\t\theader('Content-Type: application/json;charset=utf-8');\n\t\t$members = $this->Thread->members($thread_id);\n\t\t\n\t\t$users = $this->Thread->User->find(\"all\",['fields' => ['id','username'],'conditions' => [\n\t\t\t'NOT' => [\n\t\t\t\t'User.id' => $members\n\t\t\t]\n\t\t]]);\n\t\t\n\t\tif(count($users) == 0){\n\t\t\t$users = $this->Thread->User->find(\"all\",['fields' => ['id','username']]);\n\t\t}\n\t\techo json_encode(['users'=> $users]);\n\t\texit;\n\t}\n}\n","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":284,"column":2},"end":{"row":284,"column":3},"action":"insert","lines":["i"],"id":5}],[{"start":{"row":284,"column":3},"end":{"row":284,"column":4},"action":"insert","lines":["f"],"id":6}],[{"start":{"row":284,"column":4},"end":{"row":284,"column":5},"action":"insert","lines":[" "],"id":7}],[{"start":{"row":284,"column":4},"end":{"row":284,"column":5},"action":"remove","lines":[" "],"id":8}],[{"start":{"row":284,"column":4},"end":{"row":284,"column":6},"action":"insert","lines":["()"],"id":9}],[{"start":{"row":284,"column":5},"end":{"row":284,"column":6},"action":"insert","lines":["!"],"id":10}],[{"start":{"row":284,"column":6},"end":{"row":284,"column":7},"action":"insert","lines":["i"],"id":11}],[{"start":{"row":284,"column":7},"end":{"row":284,"column":8},"action":"insert","lines":["s"],"id":12}],[{"start":{"row":284,"column":8},"end":{"row":284,"column":9},"action":"insert","lines":["s"],"id":13}],[{"start":{"row":284,"column":9},"end":{"row":284,"column":10},"action":"insert","lines":["e"],"id":14}],[{"start":{"row":284,"column":10},"end":{"row":284,"column":11},"action":"insert","lines":["t"],"id":15}],[{"start":{"row":284,"column":11},"end":{"row":284,"column":13},"action":"insert","lines":["()"],"id":16}],[{"start":{"row":284,"column":12},"end":{"row":284,"column":13},"action":"insert","lines":["$"],"id":17}],[{"start":{"row":284,"column":13},"end":{"row":284,"column":14},"action":"insert","lines":["t"],"id":18}],[{"start":{"row":284,"column":14},"end":{"row":284,"column":15},"action":"insert","lines":["h"],"id":19}],[{"start":{"row":284,"column":15},"end":{"row":284,"column":16},"action":"insert","lines":["i"],"id":20}],[{"start":{"row":284,"column":16},"end":{"row":284,"column":17},"action":"insert","lines":["s"],"id":21}],[{"start":{"row":284,"column":17},"end":{"row":284,"column":18},"action":"insert","lines":["-"],"id":22}],[{"start":{"row":284,"column":18},"end":{"row":284,"column":19},"action":"insert","lines":[">"],"id":23}],[{"start":{"row":284,"column":19},"end":{"row":284,"column":20},"action":"insert","lines":["r"],"id":24}],[{"start":{"row":284,"column":20},"end":{"row":284,"column":21},"action":"insert","lines":["e"],"id":25}],[{"start":{"row":284,"column":21},"end":{"row":284,"column":22},"action":"insert","lines":["q"],"id":26}],[{"start":{"row":284,"column":22},"end":{"row":284,"column":23},"action":"insert","lines":["u"],"id":27}],[{"start":{"row":284,"column":23},"end":{"row":284,"column":24},"action":"insert","lines":["e"],"id":28}],[{"start":{"row":284,"column":24},"end":{"row":284,"column":25},"action":"insert","lines":["s"],"id":29}],[{"start":{"row":284,"column":25},"end":{"row":284,"column":26},"action":"insert","lines":["t"],"id":30}],[{"start":{"row":284,"column":26},"end":{"row":284,"column":27},"action":"insert","lines":["-"],"id":31}],[{"start":{"row":284,"column":27},"end":{"row":284,"column":28},"action":"insert","lines":[">"],"id":32}],[{"start":{"row":284,"column":28},"end":{"row":284,"column":29},"action":"insert","lines":["d"],"id":33}],[{"start":{"row":284,"column":29},"end":{"row":284,"column":30},"action":"insert","lines":["a"],"id":34}],[{"start":{"row":284,"column":30},"end":{"row":284,"column":31},"action":"insert","lines":["t"],"id":35}],[{"start":{"row":284,"column":31},"end":{"row":284,"column":32},"action":"insert","lines":["a"],"id":36}],[{"start":{"row":284,"column":32},"end":{"row":284,"column":34},"action":"insert","lines":["[]"],"id":37}],[{"start":{"row":284,"column":33},"end":{"row":284,"column":35},"action":"insert","lines":["''"],"id":38}],[{"start":{"row":284,"column":34},"end":{"row":284,"column":35},"action":"insert","lines":["C"],"id":39}],[{"start":{"row":284,"column":35},"end":{"row":284,"column":36},"action":"insert","lines":["o"],"id":40}],[{"start":{"row":284,"column":36},"end":{"row":284,"column":37},"action":"insert","lines":["m"],"id":41}],[{"start":{"row":284,"column":37},"end":{"row":284,"column":38},"action":"insert","lines":["m"],"id":42}],[{"start":{"row":284,"column":38},"end":{"row":284,"column":39},"action":"insert","lines":["e"],"id":43}],[{"start":{"row":284,"column":39},"end":{"row":284,"column":40},"action":"insert","lines":["n"],"id":44}],[{"start":{"row":284,"column":40},"end":{"row":284,"column":41},"action":"insert","lines":["t"],"id":45}],[{"start":{"row":284,"column":43},"end":{"row":284,"column":45},"action":"insert","lines":["[]"],"id":46}],[{"start":{"row":284,"column":44},"end":{"row":284,"column":46},"action":"insert","lines":["''"],"id":47}],[{"start":{"row":284,"column":45},"end":{"row":284,"column":46},"action":"insert","lines":["b"],"id":48}],[{"start":{"row":284,"column":46},"end":{"row":284,"column":47},"action":"insert","lines":["o"],"id":49}],[{"start":{"row":284,"column":47},"end":{"row":284,"column":48},"action":"insert","lines":["d"],"id":50}],[{"start":{"row":284,"column":48},"end":{"row":284,"column":49},"action":"insert","lines":["y"],"id":51}],[{"start":{"row":284,"column":53},"end":{"row":284,"column":54},"action":"insert","lines":["{"],"id":52}],[{"start":{"row":285,"column":73},"end":{"row":286,"column":0},"action":"insert","lines":["",""],"id":53},{"start":{"row":286,"column":0},"end":{"row":286,"column":2},"action":"insert","lines":["\t\t"]}],[{"start":{"row":286,"column":2},"end":{"row":286,"column":3},"action":"insert","lines":["}"],"id":54}],[{"start":{"row":285,"column":2},"end":{"row":285,"column":3},"action":"insert","lines":["\t"],"id":55}],[{"start":{"row":284,"column":5},"end":{"row":284,"column":6},"action":"remove","lines":["!"],"id":56}],[{"start":{"row":284,"column":33},"end":{"row":284,"column":40},"action":"remove","lines":["Comment"],"id":57}],[{"start":{"row":284,"column":32},"end":{"row":284,"column":34},"action":"remove","lines":["''"],"id":58}],[{"start":{"row":284,"column":31},"end":{"row":284,"column":33},"action":"remove","lines":["[]"],"id":59}],[{"start":{"row":87,"column":3},"end":{"row":87,"column":4},"action":"insert","lines":[" "],"id":60}],[{"start":{"row":87,"column":4},"end":{"row":88,"column":0},"action":"insert","lines":["",""],"id":61},{"start":{"row":88,"column":0},"end":{"row":88,"column":2},"action":"insert","lines":["\t\t"]}],[{"start":{"row":88,"column":2},"end":{"row":88,"column":3},"action":"insert","lines":["f"],"id":62}],[{"start":{"row":88,"column":3},"end":{"row":88,"column":4},"action":"insert","lines":["o"],"id":63}],[{"start":{"row":88,"column":4},"end":{"row":88,"column":5},"action":"insert","lines":["r"],"id":64}],[{"start":{"row":88,"column":5},"end":{"row":88,"column":6},"action":"insert","lines":[" "],"id":65}],[{"start":{"row":88,"column":5},"end":{"row":88,"column":6},"action":"remove","lines":[" "],"id":66}],[{"start":{"row":88,"column":5},"end":{"row":88,"column":6},"action":"insert","lines":["e"],"id":67}],[{"start":{"row":88,"column":6},"end":{"row":88,"column":7},"action":"insert","lines":["a"],"id":68}],[{"start":{"row":88,"column":7},"end":{"row":88,"column":8},"action":"insert","lines":["c"],"id":69}],[{"start":{"row":88,"column":8},"end":{"row":88,"column":9},"action":"insert","lines":["h"],"id":70}],[{"start":{"row":88,"column":9},"end":{"row":88,"column":11},"action":"insert","lines":["()"],"id":71}],[{"start":{"row":88,"column":10},"end":{"row":88,"column":14},"action":"insert","lines":["$tid"],"id":72}],[{"start":{"row":88,"column":2},"end":{"row":88,"column":15},"action":"remove","lines":["foreach($tid)"],"id":73},{"start":{"row":88,"column":2},"end":{"row":88,"column":3},"action":"insert","lines":[" "]}],[{"start":{"row":88,"column":2},"end":{"row":88,"column":3},"action":"remove","lines":[" "],"id":74}],[{"start":{"row":88,"column":2},"end":{"row":88,"column":3},"action":"insert","lines":["$"],"id":75}],[{"start":{"row":88,"column":2},"end":{"row":88,"column":3},"action":"remove","lines":["$"],"id":76}],[{"start":{"row":88,"column":2},"end":{"row":88,"column":35},"action":"insert","lines":["$this->loadModel('AnotherModel');"],"id":77}],[{"start":{"row":88,"column":20},"end":{"row":88,"column":32},"action":"remove","lines":["AnotherModel"],"id":78},{"start":{"row":88,"column":20},"end":{"row":88,"column":21},"action":"insert","lines":["U"]}],[{"start":{"row":88,"column":21},"end":{"row":88,"column":22},"action":"insert","lines":["["],"id":79}],[{"start":{"row":88,"column":21},"end":{"row":88,"column":22},"action":"remove","lines":["["],"id":80}],[{"start":{"row":88,"column":21},"end":{"row":88,"column":22},"action":"insert","lines":["p"],"id":81}],[{"start":{"row":88,"column":22},"end":{"row":88,"column":23},"action":"insert","lines":["l"],"id":82}],[{"start":{"row":88,"column":23},"end":{"row":88,"column":24},"action":"insert","lines":["o"],"id":83}],[{"start":{"row":88,"column":24},"end":{"row":88,"column":25},"action":"insert","lines":["a"],"id":84}],[{"start":{"row":88,"column":25},"end":{"row":88,"column":26},"action":"insert","lines":["d"],"id":85}],[{"start":{"row":88,"column":29},"end":{"row":89,"column":0},"action":"insert","lines":["",""],"id":86},{"start":{"row":89,"column":0},"end":{"row":89,"column":2},"action":"insert","lines":["\t\t"]}],[{"start":{"row":89,"column":2},"end":{"row":90,"column":0},"action":"insert","lines":["",""],"id":87},{"start":{"row":90,"column":0},"end":{"row":90,"column":2},"action":"insert","lines":["\t\t"]}],[{"start":{"row":90,"column":2},"end":{"row":90,"column":3},"action":"insert","lines":["$"],"id":88}],[{"start":{"row":90,"column":3},"end":{"row":90,"column":4},"action":"insert","lines":["u"],"id":89}],[{"start":{"row":90,"column":4},"end":{"row":90,"column":5},"action":"insert","lines":["p"],"id":90}],[{"start":{"row":90,"column":5},"end":{"row":90,"column":6},"action":"insert","lines":["l"],"id":91}],[{"start":{"row":90,"column":6},"end":{"row":90,"column":7},"action":"insert","lines":["o"],"id":92}],[{"start":{"row":90,"column":7},"end":{"row":90,"column":8},"action":"insert","lines":["a"],"id":93}],[{"start":{"row":90,"column":8},"end":{"row":90,"column":9},"action":"insert","lines":["d"],"id":94}],[{"start":{"row":90,"column":9},"end":{"row":90,"column":10},"action":"insert","lines":["s"],"id":95}],[{"start":{"row":90,"column":10},"end":{"row":90,"column":11},"action":"insert","lines":[" "],"id":96}],[{"start":{"row":90,"column":11},"end":{"row":90,"column":12},"action":"insert","lines":["="],"id":97}],[{"start":{"row":90,"column":12},"end":{"row":90,"column":13},"action":"insert","lines":[" "],"id":98}],[{"start":{"row":90,"column":2},"end":{"row":90,"column":13},"action":"remove","lines":["$uploads = "],"id":99},{"start":{"row":90,"column":2},"end":{"row":92,"column":45},"action":"insert","lines":["$cond = array(","        'conditions' => array('Upload.thread_id' => $id)","$uploads = $this->Upload->find('all', $cond);"]}],[{"start":{"row":91,"column":56},"end":{"row":91,"column":57},"action":"insert","lines":[";"],"id":100}],[{"start":{"row":90,"column":16},"end":{"row":91,"column":8},"action":"remove","lines":["","        "],"id":101},{"start":{"row":90,"column":16},"end":{"row":90,"column":17},"action":"insert","lines":[" "]}],[{"start":{"row":90,"column":16},"end":{"row":90,"column":17},"action":"remove","lines":[" "],"id":102}],[{"start":{"row":91,"column":0},"end":{"row":91,"column":1},"action":"insert","lines":["\t"],"id":103}],[{"start":{"row":91,"column":1},"end":{"row":91,"column":2},"action":"insert","lines":["\t"],"id":104}],[{"start":{"row":90,"column":64},"end":{"row":90,"column":65},"action":"insert","lines":[")"],"id":105}],[{"start":{"row":96,"column":37},"end":{"row":96,"column":38},"action":"insert","lines":["s"],"id":114}],[{"start":{"row":96,"column":36},"end":{"row":96,"column":37},"action":"insert","lines":["d"],"id":114}],[{"start":{"row":96,"column":35},"end":{"row":96,"column":36},"action":"insert","lines":["a"],"id":115}],[{"start":{"row":96,"column":34},"end":{"row":96,"column":35},"action":"insert","lines":["o"],"id":116}],[{"start":{"row":96,"column":33},"end":{"row":96,"column":34},"action":"insert","lines":["l"],"id":117}],[{"start":{"row":96,"column":32},"end":{"row":96,"column":33},"action":"insert","lines":["p"],"id":118}],[{"start":{"row":96,"column":31},"end":{"row":96,"column":32},"action":"insert","lines":["u"],"id":119}],[{"start":{"row":96,"column":30},"end":{"row":96,"column":31},"action":"insert","lines":["$"],"id":120}],[{"start":{"row":96,"column":29},"end":{"row":96,"column":30},"action":"insert","lines":[","],"id":121}]]},"ace":{"folds":[],"scrolltop":60,"scrollleft":0,"selection":{"start":{"row":119,"column":29},"end":{"row":119,"column":29},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":44,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1478311817683}